---
interface Props {
  id: string;
  sectionClass?: string;
  sectionFlex?: string;
  sectionSize?: string;
  contentFlex?: boolean;
  contentWidth?: string;
  contentHeight?: string;
  fixedWrapper?: boolean;
  fixed?: boolean;
  extraClass?: string;
}

const {
  id,
  extraClass = "",
  sectionClass = "section relative",
  sectionSize = "w-full h-screen",
  sectionFlex = "flex flex-col items-center justify-center",
  fixedWrapper = false,
  fixed = false,
  contentFlex = false,
  contentWidth = "w-[87%]",
  contentHeight = "h-[85vh]",
} = Astro.props;
---

<section id={id} class=`${sectionClass} ${sectionSize} ${sectionFlex}`>
  <div
    class={`${contentHeight} ${contentWidth}  ${fixed ? "fixed" : "relative"} ${fixedWrapper ? "fixed-wrapper inset-x-0 mx-auto" : ""} ${contentFlex ? "flex flex-col items-center justify-center" : ""}  ${extraClass}`}
  >
    <slot />
  </div>
</section>

<script src="../../scripts/crossfadeObserver.ts"></script>

<style is:global>
  .fixed-wrapper {
    opacity: 0;
    z-index: 0;
    transition:
      opacity 0.5s ease-in-out,
      transform 0.5s ease-in-out;
  }
  .show {
    opacity: 1;
    z-index: 10;
  }
</style>
