---
import headerWhite from '../../data/common/_images/header-white.svg';
---

<header id="header-content" class="shadow mx-auto absolute md:inset-x-0 py-8 md:py-0 -left-1/4 md:top-24 md:right-0 w-1/2 md:w-full md:h-full flex justify-center items-center">
	<nav id="nav" class="mx-auto flex flex-col md:flex-row justify-around items-start md:items-center uppercase underline-offset-4 text-center text-xs lg:text-lg z-5 transition-all duration-300 ease-in-out pl-6 pr-6 sm:pr-10 sm:pl-10 md:pl-0 md:pr-0 md:px-20 2xl:px-12">
		<a class="pl-6 md:pl-2 flex-shrink-0 hover:underline self-start md:self-center" href='/' class="px-2">‚Üê</a>
		<div id="links" class="flex-grow text-left md:text-center pl-4 md:pl-0">
			<!-- links are inserted here -->
		</div>
		<div class="pl-6 md:pl-0 self-start md:self-end pr-2">
			<button id="toggle-header-button" class="w-6 h-6 md:w-8 md:h-8 lg:w-10 lg:h-10 md:opacity-0">
				-
			</button>
		</div>
		<img id="header-bg" src={headerWhite.src} alt="header" class="absolute -z-10 hidden md:block">
	</nav>
</header>

<script>
	import { isHeaderToggled } from "../../store";
	import { BIO_NAV_LINKS, MATERIALS_NAV_LINKS } from "../../consts";

	// Function to check if a link is active
	const isLinkActive = (href: string) => {
		const pathname = window.location.pathname;
		const subpath = pathname.match(/[^\/]+/g);
		return href === pathname || href === '/' + subpath?.[0];
	};
  
	// Function to render links and update header style
	const renderLinks = (links: any[], isMaterials: boolean) => {
		const navLinks = document.getElementById('links');
		const header = document.getElementById('header-content');
		const switchBtn = document.getElementById('toggle-header-button');
		const headerBg = document.getElementById('header-bg') as HTMLImageElement;
		const nav = document.getElementById('nav') as HTMLImageElement; 

		// Clear previous content
		navLinks!.innerHTML = '';

		// Update header style based on the current state
		if (isMaterials) {
			header!.classList.remove('bg-black','text-white');
			header!.classList.add('bg-white', 'text-black');

			switchBtn!.classList.remove('bg-white', 'text-black');
			switchBtn!.classList.add('bg-black', 'text-white');

			headerBg!.classList.remove('invert');

		} else {
			
			header!.classList.remove('bg-white', 'text-black');
			header!.classList.add('bg-black','text-white');

			switchBtn!.classList.remove('bg-black', 'text-white');
			switchBtn!.classList.add('bg-white', 'text-black');

			headerBg!.classList.add('invert');

		}

		if (headerBg!.complete) {
			adjustNavWidth();
		} else {
			headerBg!.onload = adjustNavWidth;
		}

		function adjustNavWidth() {
			const bgWidth = headerBg!.naturalWidth;
			nav.style.width = `calc(${bgWidth}px - 6%)`;
		}

		// Create a wrapper div for the links
		const linksWrapper = document.createElement('div');
		linksWrapper.className = 'flex md:justify-center flex-col md:flex-row gap-x-0 lg:gap-x-2 xl:gap-x-6 py-2';

		// Insert links inside the wrapper
		links.forEach(link => {
			const isActive = isLinkActive(link.href);
			const activeClass = isActive ? 'underline' : '';
			const linkElement = `<a href="${link.href}" class="px-2 ${activeClass} hover:underline">${link.label}</a>`;
			linksWrapper.insertAdjacentHTML('beforeend', linkElement);
		});

		// Insert the wrapper into the nav
		navLinks!.appendChild(linksWrapper);

		// Reattach the event listener to the newly inserted button
		document.getElementById('toggle-header-button')!.addEventListener('click', toggleHeader);
  	};

  	// Function to toggle the header state
	const toggleHeader = () => {
		const toggled = !isHeaderToggled.get(); // Toggle the state
		isHeaderToggled.set(toggled);

		const links = toggled ? BIO_NAV_LINKS : MATERIALS_NAV_LINKS;
		renderLinks(links, !toggled);
	};

	// Initialize with BIO_NAV_LINKS
	document.addEventListener('DOMContentLoaded', () => {
		renderLinks(BIO_NAV_LINKS, false); // Initialize with BIO_NAV_LINKS and default style
		isHeaderToggled.set(true); // Set the initial state

	});

	// window.addEventListener('load', () => {
	// 	const headerBg = document.getElementById('header-bg') as HTMLImageElement; 
	// 	const nav = document.getElementById('nav') as HTMLImageElement; 

	// 	if (headerBg!.complete) {
	// 		adjustNavWidth();
	// 	} else {
	// 		headerBg!.onload = adjustNavWidth;
	// 	}

	// 	function adjustNavWidth() {
	// 		const bgWidth = headerBg!.naturalWidth;
	// 		nav.style.width = `calc(${bgWidth}px - 6%)`;
	// 	}
	// });
</script>


